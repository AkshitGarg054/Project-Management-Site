<% layout("/layouts/boilerplate") %>

<style>
    .outer-signup-box {
        display: flex;
        justify-content: center;
        margin-right: 160px;
    }
    .inside-signup-box {
        background-color: white;
        border: 1px solid #ddd;
        background-color: #96C2DB;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        padding: 20px;
        max-width: 600px;
        width: 100%;
    }
    .inside-signup-box h1 {
        font-size: 2rem;
        color: #333;
    }
    .form-control {
        /* border-radius: 4px; */
        box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.075);
    }
    .btn-success {
        border: none;
        border-radius: 4px;
        padding: 10px 30px;
        display: block;
        margin: 0 auto;
    }
    .btn-success:hover {
        background-color: #5dbea3;
    }
</style>

<div class="row mt-3 outer-signup-box">
    <div class="col-12 col-md-8 offset-md-2 inside-signup-box">
        <h1 class="mb-3 text-center">CREATE ACCOUNT</h1>
        <form method="POST" action="/signup" novalidate class="needs-validation" id="signup-form">
            <div class="mb-2">
                <label for="username" class="form-label">Username: </label>
                <input id="username" type="text" name="username" placeholder="Enter username" class="form-control" required/>
                <div class="invalid-feedback">Enter a valid username</div>
            </div>
            <div class="mb-2">
                <label for="email" class="form-label">Email: </label>
                <input id="email" type="email" name="email" placeholder="Enter email" class="form-control" required/>
                <div class="invalid-feedback email-feedback">Enter a valid email</div>
            </div>
            <div class="mb-2">
                <label for="password" class="form-label">Password: </label>
                <input id="password" 
                type="password" 
                name="password" 
                placeholder="Must be atleast 8 characters long, including atleast 1 uppercase, 1 lowercase, 1 number and 1 special character"
                class="form-control" required/>
                <div class="invalid-feedback password-feedback">Enter a valid password</div>
            </div>
            <div class="mb-2">
                <label for="confirmPassword" class="form-label">Confirm Password: </label>
                <input id="confirmPassword" 
                type="password" 
                name="confirmPassword" 
                placeholder="Re-enter password"
                class="form-control" required/>
                <div class="invalid-feedback confirmation">Enter a valid password</div>
            </div>
            <div class="mb-3">
                <label for="type" class="form-label">User Type: </label>
                <select name="type" class="form-control" required>
                    <option value="" disabled selected>Select a user type:</option>
                    <option value="Student">Student</option>
                    <option value="Admin">Admin</option>
                </select>
                <div class="invalid-feedback">Select a type</div>
            </div>
            <div class="g-recaptcha" data-sitekey="6LdddRgqAAAAAA0Q69WkkLYeDZHGJWNmYTuR4gal"></div>
            <button class="btn btn-success mt-4" id="signupButton" type="submit">SignUp</button>
            <p class="mt-3 text-center">Already have an account? <b><a href="/login">Login Here</a></b></p>
        </form>
    </div>
</div>


<script>
    const passwordInput = document.getElementById('password');
    const feedback = document.querySelector('.password-feedback');

    const requirements = [
        { regex: /.{8,}/, message: "Must be atleast 8 characters long." },
        { regex: /.[0-9]/, message: "Must include atleast one number." },
        { regex: /.[a-z]/, message: "Must include atleast one lowercase letter." },
        { regex: /.[^A-Za-z0-9]/, message: "Must include atleast one special character." },
        { regex: /.[A-Z]/, message: "Must include atleast one uppercase letter." },
    ];

    passwordInput.addEventListener("input", (e) => {
        const password = e.target.value;

        let allRequirementsMet = true;
        let invalidMessages = [];

        requirements.forEach(item => {
            const isValid = item.regex.test(password);
            if (!isValid) {
                allRequirementsMet = false;
                invalidMessages.push(item.message);
            }
        });

        if (allRequirementsMet) {
            feedback.textContent = "";
            passwordInput.setCustomValidity("");
        } else {
            feedback.textContent = invalidMessages.join(" ");
            passwordInput.setCustomValidity(invalidMessages.join(" "));
        }
    });


    //Code to confirm the password
    const signupForm = document.getElementById("signup-form");

    signupForm.addEventListener('submit', (event) => {
        //event.preventDefault();
        const password = document.getElementById('password');
        const confirmPassword = document.getElementById('confirmPassword');
        const confirmation = document.querySelector(".confirmation");
        console.log(password.value);
        console.log(confirmPassword.value);

        if (password.value.length > 0) {
            if (password.value === confirmPassword.value) {
                confirmation.textContent = "";
                confirmPassword.setCustomValidity("");
            } else {
                confirmation.textContent = "Password didn't matched!";
                confirmPassword.setCustomValidity("Password didn't matched!");
            }
        }
    });

    //Code for email Validation
    const emailInput = document.getElementById("email");
    const emailFeedback = document.querySelector(".email-feedback");
    const regex = /@lnmiit\.ac\.in$/;

    signupForm.addEventListener("submit", (event) => {
        if (!regex.test(emailInput.value)) {
            emailFeedback.textContent = "Only institute emails ending with @lnmiit.ac.in are acceptable";
            emailInput.setCustomValidity("Only institute emails ending with @lnmiit.ac.in are acceptable");
            //event.preventDefault();
        }
    });
</script>